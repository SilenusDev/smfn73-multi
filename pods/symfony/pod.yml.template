# pods/symfony/pod.yml.template
# Pod unique contenant tous les services essentiels Symfony
# Architecture simplifiée : tous les services communiquent via localhost

apiVersion: v1
kind: Pod
metadata:
  name: ${PROJECT_NAME}-pod
  labels:
    app: ${PROJECT_NAME}
    service: symfony
    category: fullstack
spec:
  containers:
  # Conteneur PHP-FPM
  - name: ${PROJECT_NAME}-php
    image: ${IMAGE_PHP}
    ports:
    - containerPort: 9000
      protocol: TCP
    env:
    - name: APP_ENV
      value: "${APP_ENV}"
    - name: APP_SECRET
      value: "${APP_SECRET}"
    volumeMounts:
    - name: symfony-code
      mountPath: /var/www/html
    - name: php-logs
      mountPath: /var/log/php
  
  # Conteneur Composer (utilitaire)
  - name: ${PROJECT_NAME}-composer
    image: ${IMAGE_COMPOSER}
    command: ["tail", "-f", "/dev/null"]
    volumeMounts:
    - name: symfony-code
      mountPath: /var/www/html
    workingDir: /var/www/html
  
  # Conteneur MariaDB
  - name: ${PROJECT_NAME}-mariadb
    image: ${IMAGE_MARIADB}
    ports:
    - containerPort: 3306
      hostPort: ${MARIADB_PORT}
    env:
    - name: MARIADB_RANDOM_ROOT_PASSWORD
      value: "yes"
    - name: MARIADB_USER
      value: "${DB_USER}"
    - name: MARIADB_PASSWORD
      value: "${DB_PASSWORD}"
    - name: TZ
      value: "${TZ}"
    volumeMounts:
    - name: mariadb-data
      mountPath: /var/lib/mysql
    - name: mariadb-config
      mountPath: /etc/mysql/conf.d
    - name: mariadb-init
      mountPath: /docker-entrypoint-initdb.d
  
  # Conteneur Node.js
  - name: ${PROJECT_NAME}-node
    image: ${IMAGE_NODE}
    ports:
    - containerPort: 5173
      hostPort: ${NODE_PORT}
    workingDir: /app
    command: ["sh", "-c", "npm install && npm run watch"]
    env:
    - name: NODE_ENV
      value: "development"
    volumeMounts:
    - name: symfony-code
      mountPath: /app
    - name: node-modules
      mountPath: /app/node_modules
  
  # Conteneur Apache
  - name: ${PROJECT_NAME}-apache
    image: ${IMAGE_APACHE}
    ports:
    - containerPort: 80
      hostPort: ${APACHE_PORT}
    command: 
    - sh
    - -c
    - |
      # Activer les modules nécessaires
      sed -i 's/#LoadModule rewrite_module/LoadModule rewrite_module/' /usr/local/apache2/conf/httpd.conf
      sed -i 's/#LoadModule proxy_module/LoadModule proxy_module/' /usr/local/apache2/conf/httpd.conf
      sed -i 's/#LoadModule proxy_fcgi_module/LoadModule proxy_fcgi_module/' /usr/local/apache2/conf/httpd.conf
      sed -i 's/#LoadModule vhost_alias_module/LoadModule vhost_alias_module/' /usr/local/apache2/conf/httpd.conf
      
      # Inclure les VirtualHosts
      echo "Include conf/vhosts/*.conf" >> /usr/local/apache2/conf/httpd.conf
      
      # Démarrer Apache
      httpd-foreground
    volumeMounts:
    - name: apache-config
      mountPath: /usr/local/apache2/conf/vhosts
    - name: apache-logs
      mountPath: /var/log/apache2
    - name: symfony-code
      mountPath: /var/www/html
  
  volumes:
  - name: symfony-code
    hostPath:
      path: ${PROJECT_ROOT}
      type: Directory
  - name: apache-config
    hostPath:
      path: ${PROJECT_ROOT}/pods/web/config
      type: DirectoryOrCreate
  - name: apache-logs
    hostPath:
      path: ${PROJECT_ROOT}/pods/symfony/logs/apache
      type: DirectoryOrCreate
  - name: php-logs
    hostPath:
      path: ${PROJECT_ROOT}/pods/symfony/logs/php
      type: DirectoryOrCreate
  - name: mariadb-data
    hostPath:
      path: ${PROJECT_ROOT}/pods/mariadb/data
      type: DirectoryOrCreate
  - name: mariadb-config
    hostPath:
      path: ${PROJECT_ROOT}/pods/mariadb/config
      type: DirectoryOrCreate
  - name: mariadb-init
    hostPath:
      path: ${PROJECT_ROOT}/pods/mariadb/init
      type: DirectoryOrCreate
  - name: node-modules
    hostPath:
      path: ${PROJECT_ROOT}/pods/node/data/node_modules
      type: DirectoryOrCreate
  restartPolicy: Always
